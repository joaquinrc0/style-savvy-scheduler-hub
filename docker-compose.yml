
services:
  postgres:
    image: postgres:15
    restart: always
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data

  django:
    build:
      context: .
    working_dir: /app/services_app
    volumes:
      - .:/app
      - ./.git:/app/.git
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file: .env
    ports:
      - "8000:8000"

  n8n:
    image: n8nio/n8n:latest
    restart: always
    env_file: .env
    ports:
      - "5678:5678"
    depends_on:
      - postgres
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_LOG_LEVEL=debug
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_PROTOCOL=https
      - N8N_HOST=${N8N_HOST}
      - WEBHOOK_URL=https://${N8N_HOST}/
      - N8N_EDITOR_BASE_URL=https://${N8N_HOST}/
      - EXECUTIONS_MODE=regular
      - N8N_PROXY_HOPS=2

  frontend:
    image: nginx:alpine
    restart: always
    volumes:
      - ./dist:/usr/share/nginx/html:ro
      - ./frontend.nginx.conf:/etc/nginx/conf.d/default.conf:ro
    expose:
      - "8081"
    command: ["nginx", "-g", "daemon off;"]

  proxy:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - django
      - n8n
      - frontend

  ngrok:
    image: ngrok/ngrok:alpine
    env_file: .env
    depends_on:
      - proxy
    command: http proxy:80 --url https://${N8N_HOST}
    ports:
      - "4040:4040"
    dns_search:
      - "."              # force single-label lookups as FQDNs :contentReference[oaicite:8]{index=8}
    dns_opt:
      - "ndots:1"        # ensures Musl doesnâ€™t append search domains incorrectly :contentReference[oaicite:9]{index=9}

volumes:
  pgdata:
  static_volume:
  media_volume: